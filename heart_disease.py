# -*- coding: utf-8 -*-
"""Copy of heart_disease.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TnHxDeoDyMLRkwhgLQu4r0iYmb4HGnsR

بارگيري فايل از آدرس مورد نظر
"""

!wget https://archive.ics.uci.edu/static/public/45/heart+disease.zip

"""باز كردن فايل از حالت فشرده"""

!unzip heart+disease.zip

"""فراخواني كتابخانه و بسته هاي مورد نياز"""

import numpy as np
from collections import defaultdict
from sklearn.model_selection import train_test_split

data_path = 'bak'
# n_users = 6040
# n_movies = 3706

"""شماره ي ستون ها به ترتيب

1. #3  (age)
2. #4  (sex)
3. #9  (cp)
4. #10 (trestbps)
5. #12 (chol)
6. #16 (fbs)
7. #19 (restecg)
8. #32 (thalach)
9. #38 (exang)
10. #40 (oldpeak)
11. #41 (slope)
12. #44 (ca)
13. #51 (thal)
14. #58 (num)

خواندن فايل و قرار دادن در ليست
"""

data_path = 'bak'
data = []
with open(data_path, 'r') as file:
  for line in file.readlines():
    # print(line)
    line = line.split(",")
    line[-1] = int(line[-1])
    data.append(line)

print(data[:10])
total_rating_record = len(data)
print(total_rating_record)

"""ميانگين گيري از ستون ها"""

calc_list = [0 for i in range(14)]
feauter_count = [0 for i in range(14)]
for i in data:
  for j in range(len(calc_list)):
    if i[j] != '?':
      i[j] = float(i[j])
      calc_list[j] = calc_list[j] + i[j]
      feauter_count[j] += 1

for i in range(len(calc_list)):
  if i == 9:
    calc_list[i] = calc_list[i] / feauter_count[i]
  else:
    calc_list[i] = int(calc_list[i] / feauter_count[i])

print(calc_list)

"""جايگزيني علامت سوال ها با مقدار ميانگين"""

for i in range(len(data)):
  for j in range(len(data[i])):
    if data[i][j] == '?':
      data[i][j] = calc_list[j]

print(data)
print(len(data))

"""جداسازي داده هاي آموزش و تست"""

data_train, data_test = train_test_split(data,
                                        test_size=0.2,
                                        random_state=42)
print(data_train[:10])
print("Training data length:")
print(len(data_train))

print(data_test[:10])
print("Test data length:")
print(len(data_test))

"""# New syntax

استفاده از بسته ي sklearn
"""

from sklearn.naive_bayes import MultinomialNB

clf = MultinomialNB(alpha=1.0, fit_prior=True)

X_train = [data_train[i][:13] for i in range(len(data_train))]
print(X_train)

Y_train = [data_train[i][13] for i in range(len(data_train))]
print(Y_train)

X_test = [data_test[i][:13] for i in range(len(data_test))]
print(X_test)

Y_test = [data_test[i][13] for i in range(len(data_test))]
print(Y_test)

from sklearn.preprocessing import MinMaxScaler #fixed import

scaler = MinMaxScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

clf.fit(X_train, Y_train)

prediction_prob = clf.predict_proba(X_test)

print(prediction_prob[0:10])

prediction = clf.predict(X_test)

print(prediction[:])

accuracy = clf.score(X_test, Y_test)

print(f'The accuracy is: {accuracy*100:.1f}%')